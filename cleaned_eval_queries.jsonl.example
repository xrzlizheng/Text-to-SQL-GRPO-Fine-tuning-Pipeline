{"sql_prompt": "How many wells were drilled in the Gulf of Mexico before 2010, and what is the total amount of oil they produced?", "sql": "SELECT COUNT(*) as total_wells, SUM(production_oil) as total_oil_produced FROM gulf_of_mexico WHERE drill_date < '2010-01-01';", "sql_context": "CREATE TABLE gulf_of_mexico (id INT, well_name VARCHAR(255), drill_date DATE, production_oil INT);"}
{"sql_prompt": "What is the total production from wells owned by 'PetroCanada'?", "sql": "SELECT SUM(production) FROM wells WHERE company = 'PetroCanada';", "sql_context": "CREATE TABLE wells (well_id INT, well_name VARCHAR(50), company VARCHAR(50), production FLOAT); INSERT INTO wells (well_id, well_name, company, production) VALUES (1, 'Well A', 'PetroCanada', 10000), (2, 'Well B', 'ExxonMobil', 15000), (3, 'Well C', 'PetroCanada', 20000);"}
{"sql_prompt": "What was the total revenue from concert ticket sales in each city?", "sql": "SELECT location, SUM(revenue) FROM Concerts GROUP BY location;", "sql_context": "CREATE TABLE Concerts (location VARCHAR(50), revenue FLOAT); INSERT INTO Concerts (location, revenue) VALUES ('New York', 50000.00), ('Los Angeles', 75000.00), ('Chicago', 60000.00);"}
{"sql_prompt": "Add new defense diplomacy event to 'defense_diplomacy' table", "sql": "INSERT INTO defense_diplomacy (id, event, country, date) VALUES (2, 'Joint Military Exercise', 'Japan', '2023-02-14');", "sql_context": "CREATE TABLE defense_diplomacy (id INT PRIMARY KEY, event VARCHAR(255), country VARCHAR(255), date DATE); INSERT INTO defense_diplomacy (id, event, country, date) VALUES (1, 'Military Attache', 'France', '2022-06-01');"}
{"sql_prompt": "What is the average depth of all marine protected areas in the Antarctic region?", "sql": "SELECT AVG(avg_depth) FROM marine_protected_areas_antarctic WHERE region = 'Antarctic';", "sql_context": "CREATE TABLE marine_protected_areas_antarctic (name VARCHAR(255), region VARCHAR(255), avg_depth FLOAT); INSERT INTO marine_protected_areas_antarctic (name, region, avg_depth) VALUES ('Ross Sea', 'Antarctic', 150.0), ('Weddell Sea', 'Antarctic', 250.0);"}
{"sql_prompt": "Rank the water treatment plants in India by the amount of wastewater treated daily in descending order.", "sql": "SELECT plant_name, daily_wastewater_treated, RANK() OVER (ORDER BY daily_wastewater_treated DESC) as rank FROM india_wastewater_treatment;", "sql_context": "CREATE TABLE india_wastewater_treatment (id INT, plant_name VARCHAR(50), daily_wastewater_treated FLOAT); INSERT INTO india_wastewater_treatment (id, plant_name, daily_wastewater_treated) VALUES (1, 'Bangalore Plant', 500), (2, 'Mumbai Plant', 600), (3, 'Delhi Plant', 400), (4, 'Chennai Plant', 450);"}
{"sql_prompt": "Which Pacific Islander authors have published more than one book between 2000 and 2010?", "sql": "SELECT a.name FROM authors a INNER JOIN books b ON a.id = b.author_id GROUP BY a.name HAVING COUNT(b.id) > 1 AND MIN(b.publication_year) BETWEEN 2000 AND 2010;", "sql_context": "CREATE TABLE authors (id INT PRIMARY KEY, name VARCHAR(255), ethnicity VARCHAR(255)); INSERT INTO authors (id, name, ethnicity) VALUES (1, 'Alice Te Punga Somerville', 'Pacific Islander'); INSERT INTO authors (id, name, ethnicity) VALUES (2, 'Sia Figiel', 'Pacific Islander'); CREATE TABLE books (id INT PRIMARY KEY, title VARCHAR(255), author_id INT, publication_year INT); INSERT INTO books (id, title, author_id, publication_year) VALUES (1, 'Once Were Pacific', 1, 2009); INSERT INTO books (id, title, author_id, publication_year) VALUES (2, 'Two Dreams in a Row', 2, 2000); INSERT INTO books (id, title, author_id, publication_year) VALUES (3, 'The Girl in the Moon Circle', 2, 2008);"}
{"sql_prompt": "What is the average citizen feedback score for parks?", "sql": "SELECT AVG(Score) FROM Feedback WHERE Service = 'Park';", "sql_context": "CREATE TABLE Feedback (Service VARCHAR(25), Score INT); INSERT INTO Feedback (Service, Score) VALUES ('Library', 8), ('Park', 7), ('Recreation Center', 9);"}
{"sql_prompt": "Find the average guest_rating for hotel_id 5", "sql": "SELECT AVG(guest_rating) FROM hotel_reviews WHERE hotel_id = 5;", "sql_context": "CREATE TABLE hotel_reviews (hotel_id INT, guest_rating FLOAT, review_text TEXT);"}
{"sql_prompt": "Delete the record of victim with id 2", "sql": "DELETE FROM victims WHERE id = 2;", "sql_context": "CREATE TABLE victims (id INT PRIMARY KEY, name VARCHAR(255), age INT, state VARCHAR(2));"}
{"sql_prompt": "What are the names of the top 2 artists with the most songs in the 'song_details' table?", "sql": "SELECT artists.artist_name, COUNT(song_details.song_id) as song_count FROM artists INNER JOIN song_details ON artists.artist_id = song_details.artist_id GROUP BY artists.artist_id ORDER BY song_count DESC LIMIT 2;", "sql_context": "CREATE TABLE song_details (song_id INT, artist_id INT, genre VARCHAR(20)); INSERT INTO song_details (song_id, artist_id, genre) VALUES (1, 1, 'Pop'), (2, 2, 'Rock'), (3, 3, 'Jazz'), (4, 1, 'Pop'), (5, 2, 'Rock'), (6, 3, 'Jazz'), (7, 1, 'Pop'), (8, 2, 'Rock'); CREATE TABLE artists (artist_id INT, artist_name VARCHAR(50)); INSERT INTO artists (artist_id, artist_name) VALUES (1, 'Taylor Swift'), (2, 'BTS'), (3, 'Coldplay');"}
{"sql_prompt": "Show the number of cultural heritage sites in each continent.", "sql": "SELECT continent, site_count FROM site_summary;", "sql_context": "CREATE TABLE heritage_sites (site_id INT, name VARCHAR(255), continent VARCHAR(255)); CREATE VIEW site_summary AS SELECT continent, COUNT(site_id) as site_count FROM heritage_sites GROUP BY continent;"}
{"sql_prompt": "What is the average safety rating of sedans released since 2018?", "sql": "SELECT AVG(rating) FROM SafetyTesting WHERE vehicle_type = 'Sedan' AND release_year >= 2018;", "sql_context": "CREATE TABLE SafetyTesting (id INT, vehicle_type VARCHAR(50), rating INT, release_year INT); INSERT INTO SafetyTesting (id, vehicle_type, rating, release_year) VALUES (1, 'Sedan', 5, 2018), (2, 'Sedan', 5, 2019), (3, 'Sedan', 4, 2018), (4, 'Sedan', 5, 2020), (5, 'Sedan', 4, 2019), (6, 'Sedan', 4, 2021), (7, 'Sedan', 5, 2021);"}
{"sql_prompt": "What is the age of each spy agency in each country?", "sql": "SELECT country, MAX(year_found) - MIN(year_found) AS age FROM SpyAgencies GROUP BY country;", "sql_context": "CREATE TABLE SpyAgencies (id INT PRIMARY KEY, name VARCHAR(50), country VARCHAR(50), year_found INT); INSERT INTO SpyAgencies (id, name, country, year_found) VALUES (1, 'CIA', 'USA', 1947); INSERT INTO SpyAgencies (id, name, country, year_found) VALUES (2, 'MI6', 'UK', 1909);"}
{"sql_prompt": "What is the maximum range of military aircrafts in the 'military_tech' table for each country?", "sql": "SELECT country, MAX(range) as max_range FROM military_tech GROUP BY country;", "sql_context": "CREATE TABLE military_tech (country VARCHAR(50), aircraft_name VARCHAR(50), range INT); INSERT INTO military_tech (country, aircraft_name, range) VALUES ('USA', 'F-15', 3000), ('USA', 'F-22', 2960), ('Russia', 'Su-27', 3500), ('Russia', 'MiG-35', 2000), ('China', 'J-20', 2400);"}
{"sql_prompt": "How many clinical trials did 'BioSolutions' conduct in 2019 and 2020?", "sql": "SELECT SUM(trials) FROM BioSolutions_ClinicalTrials WHERE company = 'BioSolutions' AND year IN (2019, 2020);", "sql_context": "CREATE TABLE BioSolutions_ClinicalTrials(company VARCHAR(20), year INT, trials INT); INSERT INTO BioSolutions_ClinicalTrials VALUES('BioSolutions', 2019, 12); INSERT INTO BioSolutions_ClinicalTrials VALUES('BioSolutions', 2020, 18);"}
{"sql_prompt": "What is the average age of offenders in the justice system in New York?", "sql": "SELECT AVG(age) as avg_age FROM offenders WHERE state = 'New York';", "sql_context": "CREATE TABLE offenders (id INT, age INT, state TEXT); INSERT INTO offenders (id, age, state) VALUES (1, 25, 'New York'), (2, 30, 'New York'), (3, 35, 'California'), (4, 40, 'New York');"}
{"sql_prompt": "Find the number of games won by the home_team for each city in the game_results table.", "sql": "SELECT city, home_team, COUNT(*) as num_wins FROM game_results WHERE home_score > away_score GROUP BY city, home_team;", "sql_context": "CREATE TABLE game_results (game_id INT, home_team VARCHAR(20), away_team VARCHAR(20), home_score INT, away_score INT, city VARCHAR(20), stadium VARCHAR(50));"}
{"sql_prompt": "What is the total revenue generated from mobile and broadband services in the first quarter of 2021?", "sql": "SELECT SUM(revenue) FROM (SELECT revenue FROM mobile_revenue WHERE quarter = 1 UNION SELECT revenue FROM broadband_revenue WHERE quarter = 1);", "sql_context": "CREATE TABLE mobile_revenue(quarter INT, revenue FLOAT); INSERT INTO mobile_revenue(quarter, revenue) VALUES (1, 1500000), (2, 1800000), (3, 2250000), (4, 2500000); CREATE TABLE broadband_revenue(quarter INT, revenue FLOAT); INSERT INTO broadband_revenue(quarter, revenue) VALUES (1, 2000000), (2, 2750000), (3, 3250000), (4, 3500000);"}
{"sql_prompt": "What was the total quantity of containers loaded on vessels per port for the month of January 2021?", "sql": "SELECT p.port_name, SUM(c.container_quantity) AS total_containers_loaded FROM containers c JOIN ports p ON c.port_id = p.port_id JOIN (SELECT DISTINCT vessel_id FROM containers WHERE load_date BETWEEN '2021-01-01' AND '2021-01-31') v ON c.vessel_id = v.vessel_id WHERE c.load_date BETWEEN '2021-01-01' AND '2021-01-31' GROUP BY p.port_name;", "sql_context": "CREATE TABLE ports (port_id INT, port_name VARCHAR(50));CREATE TABLE vessels (vessel_id INT, vessel_name VARCHAR(50));CREATE TABLE containers (container_id INT, container_quantity INT, port_id INT, vessel_id INT, load_date DATE); INSERT INTO ports VALUES (1, 'PortA'), (2, 'PortB'), (3, 'PortC'); INSERT INTO vessels VALUES (101, 'VesselX'), (102, 'VesselY'), (103, 'VesselZ');"}
{"sql_prompt": "What is the average mass of all satellites in the \"satellite_mass\" table, grouped by launch year?", "sql": "SELECT launch_year, AVG(mass) AS avg_mass FROM satellite_mass GROUP BY launch_year;", "sql_context": "CREATE TABLE satellite_mass (id INT, satellite_name VARCHAR(50), manufacturer VARCHAR(50), mass FLOAT, launch_year INT); INSERT INTO satellite_mass (id, satellite_name, manufacturer, mass, launch_year) VALUES (1, 'Sat1', 'Manufacturer1', 1000, 2005); INSERT INTO satellite_mass (id, satellite_name, manufacturer, mass, launch_year) VALUES (2, 'Sat2', 'Manufacturer2', 2000, 2010);"}
{"sql_prompt": "Add a new music genre 'ElectroLatin' into the music_genres table", "sql": "INSERT INTO music_genres (genre_name) VALUES ('ElectroLatin');", "sql_context": "CREATE TABLE music_genres (id INT, genre_name VARCHAR(50));"}
{"sql_prompt": "Insert a new record for circular economy initiative in Berlin in 2022.", "sql": "INSERT INTO circular_economy (city, year, initiative) VALUES ('Berlin', 2022, 'Plastic waste reduction campaign');", "sql_context": "CREATE TABLE circular_economy (city VARCHAR(255), year INT, initiative VARCHAR(255));"}
{"sql_prompt": "What is the distribution of customer sizes in France?", "sql": "SELECT customer_size, COUNT(*) AS customer_count FROM customer_sizes WHERE customer_country = 'France' GROUP BY customer_size", "sql_context": "CREATE TABLE customer_sizes (customer_id INT, customer_size TEXT, customer_country TEXT);"}
{"sql_prompt": "How many decentralized finance (DeFi) dApps are currently running on the Binance Smart Chain?", "sql": "SELECT COUNT(*) FROM BinanceDApps WHERE network = 'Binance Smart Chain' AND category = 'DeFi' AND status = 'active';", "sql_context": "CREATE TABLE BinanceDApps (id INT, name VARCHAR(100), network VARCHAR(50), category VARCHAR(50), status VARCHAR(50)); INSERT INTO BinanceDApps (id, name, network, category, status) VALUES (1, 'PancakeSwap', 'Binance Smart Chain', 'DeFi', 'active'), (2, 'BakerySwap', 'Binance Smart Chain', 'DeFi', 'active'), (3, 'BurgerSwap', 'Binance Smart Chain', 'DeFi', 'inactive');"}
{"sql_prompt": "Insert a new pop song released in 2022 into the Songs table", "sql": "INSERT INTO Songs (song_id, title, genre, release_date, price) VALUES (1001, 'New Pop Song', 'pop', '2022-10-15', 0.99);", "sql_context": "CREATE TABLE Songs (song_id INT, title TEXT, genre TEXT, release_date DATE, price DECIMAL(5,2));"}
{"sql_prompt": "What is the earliest date an article about 'corruption' was published, for articles that have at least 1000 words?", "sql": "SELECT MIN(published_at) FROM articles WHERE articles.category = 'corruption' AND articles.word_count >= 1000;", "sql_context": "CREATE TABLE articles (id INT, title TEXT, category TEXT, published_at DATETIME, word_count INT);"}
{"sql_prompt": "Display fan demographics, pivoted by gender", "sql": "SELECT age, location, interest, SUM(CASE WHEN gender = 'Male' THEN 1 ELSE 0 END) as males, SUM(CASE WHEN gender = 'Female' THEN 1 ELSE 0 END) as females FROM fan_demographics GROUP BY age, location, interest;", "sql_context": "CREATE TABLE fan_demographics (id INT, age INT, gender VARCHAR(50), location VARCHAR(50), interest VARCHAR(50));"}
{"sql_prompt": "Which public services received the highest and lowest budget allocations in the city of Chicago in 2022?", "sql": "SELECT department, allocated_budget FROM city_budget WHERE city = 'Chicago' AND year = 2022 ORDER BY allocated_budget DESC, department ASC LIMIT 1; SELECT department, allocated_budget FROM city_budget WHERE city = 'Chicago' AND year = 2022 ORDER BY allocated_budget ASC, department ASC LIMIT 1;", "sql_context": "CREATE TABLE city_budget (city VARCHAR(255), year INT, department VARCHAR(255), allocated_budget FLOAT); INSERT INTO city_budget (city, year, department, allocated_budget) VALUES ('Chicago', 2022, 'Education', 5000000.00), ('Chicago', 2022, 'Police', 4000000.00), ('Chicago', 2022, 'Fire Department', 3000000.00);"}
{"sql_prompt": "What is the average quantity of clothes sold in each size?", "sql": "SELECT size, AVG(quantity) FROM sales GROUP BY size;", "sql_context": "CREATE TABLE sales (id INT, product_id INT, size TEXT, quantity INT, sale_date DATE); INSERT INTO sales (id, product_id, size, quantity, sale_date) VALUES (1, 1001, 'XS', 25, '2021-09-01'), (2, 1002, 'XXL', 30, '2021-09-15'), (3, 1003, 'M', 40, '2021-09-20'), (4, 1004, 'L', 50, '2021-09-25');"}
{"sql_prompt": "How many decentralized applications are on the Cardano platform?", "sql": "SELECT COUNT(*) FROM dapps WHERE platform = 'Cardano';", "sql_context": "CREATE TABLE dapps (dapp_id INT, name VARCHAR(100), platform VARCHAR(50)); INSERT INTO dapps (dapp_id, name, platform) VALUES (1, 'SingularityNET', 'Cardano'), (2, 'OccamFi', 'Cardano'), (3, 'Liqwid', 'Cardano');"}
{"sql_prompt": "What is the total number of patients diagnosed with Diabetes in urban areas?", "sql": "SELECT COUNT(*) FROM Patients WHERE Diagnosis = 'Diabetes' AND Location = 'Urban';", "sql_context": "CREATE TABLE Patients (PatientID INT, Age INT, Gender VARCHAR(10), Diagnosis VARCHAR(20), Location VARCHAR(20)); INSERT INTO Patients (PatientID, Age, Gender, Diagnosis, Location) VALUES (1, 50, 'Male', 'Diabetes', 'Urban'); INSERT INTO Patients (PatientID, Age, Gender, Diagnosis, Location) VALUES (2, 55, 'Female', 'Diabetes', 'Urban'); INSERT INTO Patients (PatientID, Age, Gender, Diagnosis, Location) VALUES (3, 45, 'Male', 'Hypertension', 'Urban');"}
{"sql_prompt": "Insert records for landfill_capacity table, with data for 'Argentina', 'China', 'Indonesia' and capacity values 9000, 16000, 21000 respectively", "sql": "INSERT INTO landfill_capacity (country, capacity) VALUES ('Argentina', 9000), ('China', 16000), ('Indonesia', 21000);", "sql_context": "CREATE TABLE landfill_capacity (country VARCHAR(50), capacity INT);"}
{"sql_prompt": "What is the total number of streams for all songs by the artist \"Taylor Swift\" on the music streaming platform?", "sql": "SELECT SUM(streams) as total_streams FROM music_platform WHERE artist = 'Taylor Swift';", "sql_context": "CREATE TABLE music_platform (id INT, artist VARCHAR(100), song_title VARCHAR(100), streams INT);"}
{"sql_prompt": "Which program type has the highest average attendance?", "sql": "SELECT type, AVG(attendance) FROM programs_attendance GROUP BY type ORDER BY AVG(attendance) DESC LIMIT 1;", "sql_context": "CREATE TABLE if not exists programs_attendance (id INT, name VARCHAR(255), type VARCHAR(255), attendance INT); INSERT INTO programs_attendance (id, name, type, attendance) VALUES (1, 'Story Time', 'Children', 300), (2, 'Art Class', 'Children', 250), (3, 'Theater Workshop', 'Youth', 150), (4, 'Jazz Night', 'Adults', 100), (5, 'Poetry Reading', 'Adults', 75);"}
{"sql_prompt": "What is the total revenue of movies by release decade?", "sql": "SELECT (release_year - (release_year % 10)) AS decade, SUM(revenue) FROM movie_financials GROUP BY decade;", "sql_context": "CREATE TABLE movie_financials (title VARCHAR(255), revenue INT, release_year INT); INSERT INTO movie_financials (title, revenue, release_year) VALUES ('The Dark Knight', 1004, 2008), ('Star Wars', 775, 1977);"}
{"sql_prompt": "What is the percentage of teachers who attended a professional development event in each region, broken down by gender?", "sql": "SELECT region, gender, 100.0 * AVG(event_attended) as percentage FROM teachers_gender GROUP BY region, gender;", "sql_context": "CREATE TABLE teachers_gender (teacher_id INT, region VARCHAR(20), event_attended BOOLEAN, gender VARCHAR(10)); INSERT INTO teachers_gender (teacher_id, region, event_attended, gender) VALUES (1, 'North', true, 'Female'), (2, 'North', false, 'Male'), (3, 'South', true, 'Female');"}
{"sql_prompt": "What is the maximum and minimum height for trees in the 'tree_height' table?", "sql": "SELECT species, MAX(height) FROM tree_height;", "sql_context": "CREATE TABLE tree_height (id INT, species VARCHAR(255), height INT); INSERT INTO tree_height (id, species, height) VALUES (1, 'Oak', 80), (2, 'Maple', 70), (3, 'Pine', 60);"}
{"sql_prompt": "What is the average length of articles about immigration, categorized by the author's country of origin?", "sql": "SELECT authors.country, AVG(articles.length) FROM articles INNER JOIN authors ON articles.author_id = authors.id WHERE articles.title LIKE '%immigration%' GROUP BY authors.country;", "sql_context": "CREATE TABLE articles (id INT, title VARCHAR(100), date DATE, length INT, author_id INT);CREATE TABLE authors (id INT, name VARCHAR(50), country VARCHAR(50)); INSERT INTO articles VALUES (1, 'Immigration crisis', '2022-02-01', 1000, 1); INSERT INTO authors VALUES (1, 'Jane Doe', 'USA');"}
{"sql_prompt": "Update the sustainability_metrics table to reflect the latest energy consumption data for factory 3.", "sql": "UPDATE sustainability_metrics SET energy_consumption = 23000.0, measurement_date = CURRENT_DATE WHERE factory_id = 3;", "sql_context": "CREATE TABLE sustainability_metrics (factory_id INT, energy_consumption FLOAT, measurement_date DATE); INSERT INTO sustainability_metrics (factory_id, energy_consumption, measurement_date) VALUES (1, 25000.5, '2021-09-01'), (2, 18000.3, '2021-09-01'), (3, 22000.0, '2021-08-01');"}
{"sql_prompt": "What is the minimum market price of Gadolinium in India over the past 3 years?", "sql": "SELECT MIN(market_price) FROM Gadolinium_Market_Prices WHERE country = 'India' AND year BETWEEN 2020 AND 2022;", "sql_context": "CREATE TABLE Gadolinium_Market_Prices (id INT, year INT, country VARCHAR(20), market_price DECIMAL(10,2));"}
{"sql_prompt": "Which vehicle safety tests were passed by Toyota?", "sql": "SELECT DISTINCT Test FROM VehicleTesting WHERE Make = 'Toyota' AND Result = 'Pass';", "sql_context": "CREATE TABLE VehicleTesting (Id INT, Make VARCHAR(255), Model VARCHAR(255), Test VARCHAR(255), Result VARCHAR(255)); INSERT INTO VehicleTesting (Id, Make, Model, Test, Result) VALUES (3, 'Toyota', 'Corolla', 'AutoPilot', 'Pass');"}
{"sql_prompt": "What is the total installed capacity (MW) of wind energy in each province of Canada?", "sql": "SELECT province, SUM(capacity) FROM canada_wind GROUP BY province;", "sql_context": "CREATE TABLE canada_wind (id INT, province VARCHAR(50), capacity FLOAT); INSERT INTO canada_wind (id, province, capacity) VALUES (1, 'Ontario', 500.5), (2, 'Quebec', 600.2), (3, 'Alberta', 800.1);"}
{"sql_prompt": "How many specialists were added to the rural health clinic in Texas in Q1 2022?", "sql": "SELECT COUNT(*) FROM RuralClinic WHERE staff_type = 'specialist' AND hire_date BETWEEN '2022-01-01' AND '2022-03-31';", "sql_context": "CREATE TABLE RuralClinic (clinicID INT, staff_type VARCHAR(20), hire_date DATE); INSERT INTO RuralClinic (clinicID, staff_type, hire_date) VALUES (1, 'doctor', '2022-01-15'), (2, 'nurse', '2021-12-21'), (3, 'specialist', '2022-03-05');"}
{"sql_prompt": "What are the explainable AI techniques used in the UK and Canada?", "sql": "SELECT DISTINCT location, technique FROM Explainable_AI WHERE location IN ('UK', 'Canada');", "sql_context": "CREATE TABLE Explainable_AI (id INT, technique TEXT, location TEXT); INSERT INTO Explainable_AI (id, technique, location) VALUES (1, 'SHAP', 'UK'), (2, 'LIME', 'Canada'), (3, 'anchors', 'UK'), (4, 'TreeExplainer', 'Canada');"}
{"sql_prompt": "What is the count of patients with mental health disorders by their race/ethnicity?", "sql": "SELECT race_ethnicity, COUNT(*) as count FROM patients WHERE has_mental_health_disorder = true GROUP BY race_ethnicity;", "sql_context": "CREATE TABLE patients (id INT, has_mental_health_disorder BOOLEAN, race_ethnicity VARCHAR(50)); INSERT INTO patients (id, has_mental_health_disorder, race_ethnicity) VALUES (1, true, 'Asian'), (2, false, 'White'), (3, true, 'Hispanic'), (4, true, 'Black');"}
{"sql_prompt": "Who are the top 3 countries receiving climate finance for communication projects?", "sql": "SELECT cf.country, SUM(cf.amount) FROM climate_finance cf WHERE cf.sector = 'communication' GROUP BY cf.country ORDER BY SUM(cf.amount) DESC LIMIT 3;", "sql_context": "CREATE TABLE climate_finance (id INT, country VARCHAR(50), amount FLOAT, sector VARCHAR(50));"}
{"sql_prompt": "How many ethical AI initiatives were implemented in each region, ordered by the number of initiatives in descending order?", "sql": "SELECT region, COUNT(*) as total_initiatives FROM ethical_ai_initiatives GROUP BY region ORDER BY total_initiatives DESC;", "sql_context": "CREATE TABLE ethical_ai_initiatives (initiative_id INT, initiative_name VARCHAR(255), region VARCHAR(255)); INSERT INTO ethical_ai_initiatives (initiative_id, initiative_name, region) VALUES (1, 'AI for social justice', 'North America'), (2, 'Ethical AI guidelines', 'Europe'), (3, 'AI for disability', 'Asia'), (4, 'AI for healthcare equality', 'Africa'), (5, 'Fair AI in education', 'South America'), (6, 'Ethical AI for finance', 'North America'), (7, 'AI for environmental justice', 'Europe');"}
{"sql_prompt": "What is the total number of eco-friendly hotels in London and Paris combined?", "sql": "SELECT COUNT(*) FROM eco_hotels WHERE city IN ('London', 'Paris');", "sql_context": "CREATE TABLE eco_hotels (hotel_id INT, name TEXT, city TEXT); INSERT INTO eco_hotels (hotel_id, name, city) VALUES (1, 'Eco Hotel London', 'London'), (2, 'Green Haven London', 'London'), (3, 'Eco Lodge London', 'London'), (4, 'Eco Hotel Paris', 'Paris'), (5, 'Green Haven Paris', 'Paris'), (6, 'Eco Lodge Paris', 'Paris');"}
{"sql_prompt": "What is the average delivery time for each courier?", "sql": "SELECT c.courier, AVG(d.delivery_time) as avg_delivery_time FROM deliveries d JOIN couriers c ON d.courier_id = c.courier_id GROUP BY c.courier;", "sql_context": "CREATE TABLE couriers (courier_id INT, courier TEXT); INSERT INTO couriers (courier_id, courier) VALUES (1, 'DHL'), (2, 'UPS'), (3, 'FedEx'); CREATE TABLE deliveries (delivery_id INT, courier_id INT, delivery_time INT); INSERT INTO deliveries (delivery_id, courier_id, delivery_time) VALUES (1, 1, 500), (2, 2, 700), (3, 3, 400), (4, 1, 600), (5, 3, 300);"}
{"sql_prompt": "What is the average duration of space missions for US astronauts?", "sql": "SELECT Nationality, AVG(MissionDuration) FROM Astronauts WHERE Nationality = 'American' GROUP BY Nationality;", "sql_context": "CREATE TABLE Astronauts (AstronautID INT, FirstName VARCHAR(20), LastName VARCHAR(20), Nationality VARCHAR(20), SpaceMissions INT, MissionDuration INT); INSERT INTO Astronauts (AstronautID, FirstName, LastName, Nationality, SpaceMissions, MissionDuration) VALUES (1, 'Alan', 'Shepard', 'American', 2, 315); INSERT INTO Astronauts (AstronautID, FirstName, LastName, Nationality, SpaceMissions, MissionDuration) VALUES (2, 'Mae', 'Jemison', 'American', 1, 190);"}
{"sql_prompt": "What is the total revenue for vegetarian menu items?", "sql": "SELECT SUM(o.revenue) as total_revenue FROM orders o JOIN menu_items mi ON o.menu_item_id = mi.id WHERE mi.vegetarian = TRUE;", "sql_context": "CREATE TABLE restaurants (id INT, name VARCHAR(255)); INSERT INTO restaurants (id, name) VALUES (1, 'Restaurant A'), (2, 'Restaurant B'), (3, 'Restaurant C'); CREATE TABLE menu_items (id INT, name VARCHAR(255), vegetarian BOOLEAN, restaurant_id INT); INSERT INTO menu_items (id, name, vegetarian, restaurant_id) VALUES (1, 'Tacos', FALSE, 1), (2, 'Pizza', TRUE, 2), (3, 'Fried Rice', FALSE, 3), (4, 'Burrito', TRUE, 1), (5, 'Spaghetti', FALSE, 2); CREATE TABLE orders (menu_item_id INT, revenue INT); INSERT INTO orders (menu_item_id, revenue) VALUES (1, 500), (2, 700), (3, 600), (4, 800), (5, 900);"}
{"sql_prompt": "What is the total waste production by sustainable material category in 2019?", "sql": "SELECT category, SUM(quantity) as total_waste FROM waste_data WHERE year = 2019 GROUP BY category;", "sql_context": "CREATE TABLE waste_data (year INT, category VARCHAR(255), quantity INT); INSERT INTO waste_data (year, category, quantity) VALUES (2018, 'Organic Cotton', 1000), (2018, 'Recycled Polyester', 1500), (2018, 'Hemp', 500), (2019, 'Organic Cotton', 1200), (2019, 'Recycled Polyester', 1800), (2019, 'Hemp', 600);"}
{"sql_prompt": "What was the total quantity of Samarium (Sm) supplied by each supplier in Q2 2022, ordered by supplier name?", "sql": "SELECT supplier, SUM(quantity) AS total_quantity FROM supplier_trends WHERE element = 'Sm' AND quarter = 2 AND year = 2022 GROUP BY supplier ORDER BY supplier;", "sql_context": "CREATE TABLE supplier_trends (supplier VARCHAR(25), element VARCHAR(2), quantity INT, quarter INT, year INT); INSERT INTO supplier_trends VALUES ('SupplierD', 'Sm', 400, 2, 2022), ('SupplierE', 'Sm', 600, 2, 2022), ('SupplierF', 'Sm', 500, 2, 2022);"}
{"sql_prompt": "What is the total quantity of gold and silver extracted by each location?", "sql": "SELECT location, SUM(CASE WHEN mineral = 'Gold' THEN quantity ELSE 0 END) as total_gold, SUM(CASE WHEN mineral = 'Silver' THEN quantity ELSE 0 END) as total_silver FROM geological_survey GROUP BY location;", "sql_context": "CREATE TABLE geological_survey (location VARCHAR(255), mineral VARCHAR(255), quantity FLOAT, year INT); INSERT INTO geological_survey (location, mineral, quantity, year) VALUES ('Mine A', 'Gold', 1000, 2015), ('Mine A', 'Silver', 2000, 2015), ('Mine B', 'Gold', 1500, 2016), ('Mine B', 'Silver', 2500, 2016);"}
{"sql_prompt": "What is the maximum capacity of any energy efficiency project?", "sql": "SELECT MAX(capacity) FROM energy_efficiency_projects;", "sql_context": "CREATE TABLE energy_efficiency_projects (name TEXT, capacity INTEGER); INSERT INTO energy_efficiency_projects (name, capacity) VALUES ('Project A', 200), ('Project B', 900);"}
{"sql_prompt": "Set the nitrogen level to 150 for the crop with ID C005", "sql": "UPDATE crops SET nitrogen_level = 150 WHERE crop_id = 'C005';", "sql_context": "CREATE TABLE crops (crop_id VARCHAR(10), nitrogen_level INT);"}
{"sql_prompt": "What are the open pedagogy initiatives and their corresponding budgets?", "sql": "SELECT i.initiative_name, b.budget_amount FROM initiatives i INNER JOIN budgets b ON i.initiative_id = b.initiative_id;", "sql_context": "CREATE TABLE initiatives (initiative_id INT, initiative_name VARCHAR(50), initiative_type VARCHAR(50)); CREATE TABLE budgets (budget_id INT, initiative_id INT, budget_amount INT); INSERT INTO initiatives (initiative_id, initiative_name, initiative_type) VALUES (101, 'Open Source Textbooks', 'Open Pedagogy'), (102, 'Peer Learning Networks', 'Open Pedagogy'), (103, 'Project-Based Learning', 'Open Pedagogy'); INSERT INTO budgets (budget_id, initiative_id, budget_amount) VALUES (201, 101, 10000), (202, 102, 15000), (203, 103, 12000);"}
{"sql_prompt": "Delete all records related to wheelchair ramps from the accommodations table.", "sql": "DELETE FROM accommodations WHERE type = 'Wheelchair Ramp';", "sql_context": "CREATE TABLE accommodations (id INT, type VARCHAR(255), description VARCHAR(255)); INSERT INTO accommodations (id, type, description) VALUES (1, 'Wheelchair Ramp', 'Ramp with handrails and non-slip surface'); INSERT INTO accommodations (id, type, description) VALUES (2, 'Elevator', 'Standard elevator for building access');"}
{"sql_prompt": "Determine the minimum salary for employees who have completed the advanced leadership training.", "sql": "SELECT MIN(Salary) FROM Employees WHERE CompletedAdvancedLeadershipTraining = TRUE;", "sql_context": "CREATE TABLE Employees (EmployeeID INT, CompletedAdvancedLeadershipTraining BOOLEAN, Salary FLOAT);"}
{"sql_prompt": "How many community health centers offer telehealth services in California?", "sql": "SELECT COUNT(*) FROM TelehealthServices WHERE State = 'California' AND Telehealth = 'Yes';", "sql_context": "CREATE TABLE TelehealthServices (HealthCenterID INT, State VARCHAR(20), Telehealth VARCHAR(10)); INSERT INTO TelehealthServices (HealthCenterID, State, Telehealth) VALUES (1, 'California', 'Yes'); INSERT INTO TelehealthServices (HealthCenterID, State, Telehealth) VALUES (2, 'California', 'No');"}
{"sql_prompt": "What is the minimum depth of the ocean floor in the Mariana trench?", "sql": "SELECT MIN(depth) FROM ocean_floor_depth WHERE location = 'Mariana Trench';", "sql_context": "CREATE TABLE ocean_floor_depth (location VARCHAR(255), depth FLOAT); INSERT INTO ocean_floor_depth (location, depth) VALUES ('Mariana Trench', 10994), ('Puerto Rico Trench', 8605);"}
{"sql_prompt": "Find the average age of visitors who participated in online events in Argentina.", "sql": "SELECT AVG(participant_age) FROM EventParticipants WHERE country = 'Argentina' AND event_type = 'Online';", "sql_context": "CREATE TABLE EventParticipants (event_id INT, country VARCHAR(20), participant_age INT, event_type VARCHAR(10)); INSERT INTO EventParticipants (event_id, country, participant_age, event_type) VALUES (1, 'Argentina', 25, 'Online'), (2, 'Brazil', 30, 'Offline'), (3, 'Chile', 35, 'Offline');"}
{"sql_prompt": "Update the age of archaeologist 'John Doe' in the 'archaeologists' table to 35.", "sql": "UPDATE archaeologists SET age = 35 WHERE name = 'John Doe';", "sql_context": "CREATE TABLE archaeologists (id INT, name VARCHAR(50), age INT, gender VARCHAR(10), country VARCHAR(50));"}
{"sql_prompt": "Find the number of tourists from Brazil in each destination in 2022?", "sql": "SELECT destination, tourists FROM tourism_stats WHERE visitor_country = 'Brazil' AND year = 2022;", "sql_context": "CREATE TABLE tourism_stats (visitor_country VARCHAR(20), destination VARCHAR(20), year INT, tourists INT); INSERT INTO tourism_stats (visitor_country, destination, year, tourists) VALUES ('Brazil', 'Rio de Janeiro', 2022, 700), ('Brazil', 'Sao Paulo', 2022, 800), ('Brazil', 'Brasilia', 2022, 600);"}
{"sql_prompt": "What is the name of the faculty member with the least number of publications in the Computer Science department?", "sql": "SELECT Name FROM Faculty WHERE Department = 'Computer Science' AND NumPublications = (SELECT MIN(NumPublications) FROM Faculty WHERE Department = 'Computer Science');", "sql_context": "CREATE TABLE Faculty (FacultyID int, Name varchar(50), Department varchar(50), NumPublications int); INSERT INTO Faculty (FacultyID, Name, Department, NumPublications) VALUES (1, 'John Doe', 'Mathematics', 15); INSERT INTO Faculty (FacultyID, Name, Department, NumPublications) VALUES (2, 'Jane Smith', 'Mathematics', 20); INSERT INTO Faculty (FacultyID, Name, Department, NumPublications) VALUES (3, 'Mary Johnson', 'Physics', 25); INSERT INTO Faculty (FacultyID, Name, Department, NumPublications) VALUES (4, 'Bob Brown', 'Physics', 10); INSERT INTO Faculty (FacultyID, Name, Department, NumPublications) VALUES (5, 'Alice Davis', 'Computer Science', 5); INSERT INTO Faculty (FacultyID, Name, Department, NumPublications) VALUES (6, 'Charlie Brown', 'Computer Science', 10);"}
{"sql_prompt": "Determine the revenue generated from the sale of dishes in a specific region in the last month.", "sql": "SELECT SUM(i.quantity * m.price) as revenue FROM inventory i JOIN orders o ON i.item_id = o.item_id JOIN menu_items m ON i.item_id = m.item_id JOIN restaurants r ON o.restaurant_id = r.restaurant_id WHERE o.order_date BETWEEN '2022-02-01' AND '2022-02-28' AND r.region = 'Midwest';", "sql_context": "CREATE TABLE inventory (item_id INT, quantity INT, unit_price DECIMAL(5,2)); INSERT INTO inventory (item_id, quantity, unit_price) VALUES (1, 10, 12.99), (2, 20, 7.50), (3, 30, 9.99), (4, 40, 15.49), (5, 50, 8.99); CREATE TABLE orders (order_id INT, item_id INT, order_date DATE, restaurant_id INT); INSERT INTO orders (order_id, item_id, order_date, restaurant_id) VALUES (1, 1, '2022-03-01', 2), (2, 3, '2022-03-02', 2), (3, 2, '2022-03-03', 1), (4, 4, '2022-03-04', 1), (5, 5, '2022-03-05', 2); CREATE TABLE menu_items (item_id INT, name TEXT, is_vegan BOOLEAN, price DECIMAL(5,2)); INSERT INTO menu_items (item_id, name, is_vegan, price) VALUES (1, 'Quinoa Salad', true, 12.99), (2, 'Beef Burger', false, 7.50), (3, 'Chickpea Curry', true, 9.99), (4, 'Cheesecake', false, 15.49), (5, 'Veggie Pizza', true, 8.99); CREATE TABLE restaurants (restaurant_id INT, name TEXT, region TEXT); INSERT INTO restaurants (restaurant_id, name, region) VALUES (1, 'Big Burger', 'East'), (2, 'Veggies R Us', 'Midwest'), (3, 'Tasty Bites', 'West');"}
{"sql_prompt": "Which brands have received the most cruelty-free certifications?", "sql": "SELECT b.Brand_Name, COUNT(c.Certification_ID) AS Cruelty_Free_Certifications_Count FROM Brands b JOIN Certifications c ON b.Brand_ID = c.Brand_ID GROUP BY b.Brand_ID;", "sql_context": "CREATE TABLE Brands (Brand_ID INT PRIMARY KEY, Brand_Name TEXT); CREATE TABLE Certifications (Certification_ID INT PRIMARY KEY, Certification_Name TEXT, Brand_ID INT); INSERT INTO Brands (Brand_ID, Brand_Name) VALUES (1, 'Ethical Beauty'), (2, 'Pure Cosmetics'), (3, 'Green Earth'), (4, 'Eco Living'), (5, 'Sustainable Solutions'); INSERT INTO Certifications (Certification_ID, Certification_Name, Brand_ID) VALUES (1, 'Leaping Bunny', 1), (2, 'Cruelty Free International', 1), (3, 'People for the Ethical Treatment of Animals (PETA)', 2), (4, 'Leaping Bunny', 2), (5, 'Cruelty Free International', 3), (6, 'Leaping Bunny', 3), (7, 'People for the Ethical Treatment of Animals (PETA)', 4), (8, 'Leaping Bunny', 4), (9, 'Cruelty Free International', 5), (10, 'People for the Ethical Treatment of Animals (PETA)', 5);"}
{"sql_prompt": "What is the total biomass of marine species in the Southern Ocean, excluding species that are not yet classified?", "sql": "SELECT SUM(ms.biomass) as total_biomass FROM marine_species ms WHERE ms.region = 'Southern Ocean' AND ms.classified = TRUE;", "sql_context": "CREATE TABLE marine_species (id INT, name VARCHAR(100), region VARCHAR(50), biomass FLOAT, classified BOOLEAN);"}
{"sql_prompt": "What is the maximum water temperature recorded for each farm?", "sql": "SELECT FarmID, MAX(WaterTemp) as MaxTemp FROM FarmTemp GROUP BY FarmID;", "sql_context": "CREATE TABLE FarmTemp (FarmID int, Date date, WaterTemp float); INSERT INTO FarmTemp (FarmID, Date, WaterTemp) VALUES (1, '2022-01-01', 10.5), (1, '2022-01-02', 11.2), (2, '2022-01-01', 12.1), (2, '2022-01-02', 12.6);"}
{"sql_prompt": "Update the crime_statistics table to mark the 'status' column as 'Solved' for records with 'crime_type' 'Burglary' and 'date' '2022-06-14'?", "sql": "UPDATE crime_statistics SET status = 'Solved' WHERE crime_type = 'Burglary' AND date = '2022-06-14';", "sql_context": "CREATE TABLE crime_statistics (crime_type VARCHAR(255), crime_count INT, date DATE, status VARCHAR(255)); INSERT INTO crime_statistics (crime_type, crime_count, date, status) VALUES (NULL, NULL, NULL, NULL);"}
{"sql_prompt": "What are the total sales of military equipment to Asia in Q1 2020?", "sql": "SELECT SUM(sales) FROM sales WHERE region = 'Asia' AND quarter = 1 AND year = 2020;", "sql_context": "CREATE TABLE sales(id INT, region VARCHAR(255), quarter INT, year INT, equipment VARCHAR(255), sales FLOAT);"}
{"sql_prompt": "What was the total amount of funds allocated for agricultural innovation projects in Uganda in 2021?", "sql": "SELECT SUM(funds) FROM agricultural_innovation_projects WHERE country = 'Uganda' AND year = 2021;", "sql_context": "CREATE TABLE agricultural_innovation_projects (id INT, country VARCHAR(50), funds FLOAT, year INT); INSERT INTO agricultural_innovation_projects (id, country, funds, year) VALUES (1, 'Kenya', 500000.00, 2020), (2, 'Uganda', 600000.00, 2021);"}
{"sql_prompt": "Insert a new treatment record into the treatments table.", "sql": "INSERT INTO treatments (id, patient_id, therapist_id, treatment_date, treatment_type, cost) VALUES (2, 3, 2, '2022-02-10', 'CBT', 200.00);", "sql_context": "CREATE TABLE treatments (id INT PRIMARY KEY, patient_id INT, therapist_id INT, treatment_date DATE, treatment_type VARCHAR(50), cost DECIMAL(5,2));INSERT INTO treatments (id, patient_id, therapist_id, treatment_date, treatment_type, cost) VALUES (1, 1, 1, '2022-01-01', 'Psychotherapy', 150.00);"}
{"sql_prompt": "Find the top 3 drugs with the highest R&D expenditures for a given year.", "sql": "SELECT drug_name, SUM(amount) OVER (PARTITION BY drug_name ORDER BY SUM(amount) DESC) AS total_expenditure, year FROM rd_expenditures GROUP BY 1, 3 ORDER BY 2 DESC LIMIT 3;", "sql_context": "CREATE TABLE rd_expenditures (drug_name TEXT, year INTEGER, amount INTEGER);"}
{"sql_prompt": "How many patients with mental health issues are being treated by cultural competency trained providers?", "sql": "SELECT COUNT(MentalHealthPatients.PatientID) FROM MentalHealthPatients INNER JOIN Providers ON MentalHealthPatients.PatientID = Providers.ProviderID WHERE Providers.CulturalCompetencyTraining IS NOT NULL;", "sql_context": "CREATE TABLE MentalHealthPatients (PatientID INT, Age INT, MentalHealthIssue VARCHAR(20)); CREATE TABLE Providers (ProviderID INT, ProviderName VARCHAR(20), CulturalCompetencyTraining DATE); INSERT INTO MentalHealthPatients (PatientID, Age, MentalHealthIssue) VALUES (1, 30, 'Anxiety'); INSERT INTO Providers (ProviderID, ProviderName, CulturalCompetencyTraining) VALUES (1, 'Dr. Smith', '2022-01-01');"}
{"sql_prompt": "What is the total revenue for each cultural event category, sorted by revenue in descending order?", "sql": "SELECT category, SUM(price * quantity) as total_revenue FROM tickets GROUP BY category ORDER BY total_revenue DESC;", "sql_context": "CREATE TABLE tickets (id INT, event TEXT, category TEXT, price DECIMAL(5,2), quantity INT); INSERT INTO tickets (id, event, category, price, quantity) VALUES (1, 'Concert', 'music', 50.00, 100), (2, 'Jazz Festival', 'music', 35.00, 200), (3, 'Theatre Play', 'theatre', 75.00, 150);"}
{"sql_prompt": "How many renewable energy facilities are located in the Asia-Pacific region, and what is their total capacity in MW?", "sql": "SELECT region, SUM(capacity) as total_capacity FROM renewable_facilities WHERE region = 'Asia-Pacific' GROUP BY region;", "sql_context": "CREATE TABLE renewable_facilities (region VARCHAR(50), capacity NUMERIC, technology VARCHAR(50)); INSERT INTO renewable_facilities (region, capacity, technology) VALUES ('Asia-Pacific', 500, 'Solar'), ('Asia-Pacific', 600, 'Wind'), ('Europe', 400, 'Hydro'), ('Africa', 300, 'Geothermal');"}
{"sql_prompt": "What is the average salary of workers in the 'manufacturing' department across all companies?", "sql": "SELECT AVG(worker_salaries.salary) FROM worker_salaries INNER JOIN companies ON worker_salaries.company_id = companies.company_id WHERE companies.department = 'manufacturing';", "sql_context": "CREATE TABLE companies (company_id INT, department VARCHAR(20));CREATE TABLE worker_salaries (worker_id INT, company_id INT, salary INT, department VARCHAR(20));"}
{"sql_prompt": "What is the total number of policy impact records for 'City N' and 'City O'?", "sql": "SELECT COUNT(*) FROM policy_impact WHERE (city = 'City N' OR city = 'City O')", "sql_context": "CREATE TABLE policy_impact (city VARCHAR(255), policy_id INT, impact TEXT); INSERT INTO policy_impact"}
{"sql_prompt": "Find the most recent mission for each spacecraft that had a female commander.", "sql": "SELECT spacecraft_id, MAX(mission_date) as most_recent_mission FROM Spacecraft_Missions WHERE commander_gender = 'Female' GROUP BY spacecraft_id", "sql_context": "CREATE TABLE Spacecraft_Missions (id INT, spacecraft_id INT, mission_name VARCHAR(100), mission_date DATE, commander_gender VARCHAR(10)); INSERT INTO Spacecraft_Missions (id, spacecraft_id, mission_name, mission_date, commander_gender) VALUES (1, 1, 'Apollo 11', '1969-07-16', 'Male');"}
{"sql_prompt": "What is the average age of football players in the 'players' table?", "sql": "SELECT AVG(age) FROM players WHERE position = 'Goalkeeper' OR position = 'Defender';", "sql_context": "CREATE TABLE players (player_id INT, name VARCHAR(50), position VARCHAR(50), team VARCHAR(50), age INT); INSERT INTO players (player_id, name, position, team, age) VALUES (1, 'John Doe', 'Goalkeeper', 'Arsenal', 32), (2, 'Jane Smith', 'Defender', 'Manchester United', 28);"}
{"sql_prompt": "What is the total installed capacity of renewable energy projects, broken down by country and project type?", "sql": "SELECT country, project_type, SUM(installed_capacity) FROM renewable_energy GROUP BY country, project_type;", "sql_context": "CREATE TABLE renewable_energy (country VARCHAR(50), project_type VARCHAR(50), installed_capacity INT); INSERT INTO renewable_energy (country, project_type, installed_capacity) VALUES ('USA', 'Wind', 3000), ('USA', 'Solar', 5000), ('Mexico', 'Wind', 2000), ('Mexico', 'Solar', 4000);"}
{"sql_prompt": "What is the total number of workers in the manufacturing industry across all regions?", "sql": "SELECT SUM(number_of_workers) FROM manufacturing_industry;", "sql_context": "CREATE TABLE manufacturing_industry (id INT, region VARCHAR(255), number_of_workers INT); INSERT INTO manufacturing_industry (id, region, number_of_workers) VALUES (1, 'North', 5000), (2, 'South', 7000), (3, 'East', 6000), (4, 'West', 8000);"}
{"sql_prompt": "What is the percentage of open data initiatives in the United States with public participation?", "sql": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM open_data_initiatives WHERE initiative_country = 'United States')) AS percentage FROM open_data_initiatives WHERE initiative_country = 'United States' AND has_public_participation = true;", "sql_context": "CREATE TABLE open_data_initiatives (initiative_id INT, initiative_date DATE, initiative_country VARCHAR(50), has_public_participation BOOLEAN); INSERT INTO open_data_initiatives (initiative_id, initiative_date, initiative_country, has_public_participation) VALUES (1, '2021-01-01', 'United States', true);"}
{"sql_prompt": "What is the average CO2 emission for virtual tours?", "sql": "SELECT AVG(virtual_tour.co2_eq) FROM virtual_tour;", "sql_context": "CREATE TABLE virtual_tour (id INT, co2_eq DECIMAL(10, 2), tour_id INT); INSERT INTO virtual_tour (id, co2_eq, tour_id) VALUES (1, 2.5, 1);"}
{"sql_prompt": "What is the maximum environmental impact score for mining operations in Year 2000?", "sql": "SELECT MAX(score) FROM environmental_impact WHERE year = 2000 AND mining_operation LIKE '%Mining%';", "sql_context": "CREATE TABLE environmental_impact (id INT, mining_operation TEXT, year INT, score FLOAT); INSERT INTO environmental_impact (id, mining_operation, year, score) VALUES (1, 'Operation A', 1999, 45.6); INSERT INTO environmental_impact (id, mining_operation, year, score) VALUES (2, 'Operation B', 2000, 67.8);"}
{"sql_prompt": "What is the total donation amount per volunteer for the year 2022?", "sql": "SELECT volunteer, SUM(donation) FROM donations WHERE donation_date BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY volunteer;", "sql_context": "CREATE TABLE donations (id INT, volunteer TEXT, donation FLOAT, donation_date DATE); INSERT INTO donations (id, volunteer, donation, donation_date) VALUES (1, 'Jamal Williams', 50.00, '2022-01-01'), (2, 'Sophia Garcia', 100.00, '2022-02-01'), (3, 'Liam Brown', 25.00, '2022-01-15'), (4, 'Olivia Johnson', 75.00, '2022-03-05'), (5, 'William Davis', 125.00, '2022-03-20');"}
{"sql_prompt": "What are the names and total transactions of all Shariah-compliant banks in the Asia region?", "sql": "SELECT bank_name, SUM(total_transactions) FROM shariah_banks WHERE region = 'Asia' GROUP BY bank_name;", "sql_context": "CREATE TABLE shariah_banks (bank_name TEXT, region TEXT, total_transactions INTEGER); INSERT INTO shariah_banks (bank_name, region, total_transactions) VALUES ('Al Rajhi Bank', 'Asia', 50000), ('Bank Islam', 'Asia', 45000), ('Maybank Islamic', 'Asia', 40000);"}
{"sql_prompt": "Insert a new employee record for 'Bruce Wayne' from 'UK' into the 'employees' table.", "sql": "INSERT INTO employees (id, name, country) VALUES (4, 'Bruce Wayne', 'UK');", "sql_context": "CREATE TABLE employees (id INT, name VARCHAR(255), country VARCHAR(255)); INSERT INTO employees (id, name, country) VALUES (1, 'John Doe', 'USA'); INSERT INTO employees (id, name, country) VALUES (2, 'Jane Smith', 'Canada');"}
{"sql_prompt": "Identify cities with a population under 100,000 and a recycling rate below 10%.", "sql": "SELECT name FROM cities_2 WHERE population < 100000 AND recycling_rate < 10;", "sql_context": "CREATE TABLE cities_2 (name VARCHAR(255), state VARCHAR(255), population DECIMAL(10,2), recycling_rate DECIMAL(5,2)); INSERT INTO cities_2 (name, state, population, recycling_rate) VALUES ('City1', 'California', 50000, 15), ('City2', 'Texas', 75000, 8), ('City3', 'Florida', 90000, 25);"}
{"sql_prompt": "Which space agencies have launched satellites with the most debris?", "sql": "SELECT agency, SUM(num_debris) as total_debris FROM satellites GROUP BY agency ORDER BY total_debris DESC;", "sql_context": "CREATE TABLE satellites (agency VARCHAR(50), num_debris INT); INSERT INTO satellites (agency, num_debris) VALUES ('NASA', 3000), ('ESA', 1000), ('Roscosmos', 2000);"}
{"sql_prompt": "Count the number of posts that have more than 100 likes in the 'social_media' table.", "sql": "SELECT COUNT(*) FROM social_media WHERE likes > 100;", "sql_context": "CREATE TABLE social_media (user_id INT, post_id INT, post_date DATE, likes INT);"}
{"sql_prompt": "Which directors have directed more than 10 movies, and what is the average rating of their films?", "sql": "SELECT d.name, AVG(m.rating) FROM movies m JOIN directors d ON m.director = d.name GROUP BY d.name HAVING COUNT(m.id) > 10;", "sql_context": "CREATE TABLE movies (id INT, title VARCHAR(255), release_year INT, rating FLOAT, genre VARCHAR(255), director VARCHAR(255)); CREATE TABLE directors (id INT, name VARCHAR(255), age INT, gender VARCHAR(10));"}
{"sql_prompt": "What is the minimum sales revenue for a specific drug in a certain year?", "sql": "SELECT MIN(sales.revenue) FROM sales JOIN drugs ON sales.drug_id = drugs.id WHERE drugs.name = 'DrugA' AND sales.year = 2020;", "sql_context": "CREATE TABLE drugs (id INT, name VARCHAR(255)); INSERT INTO drugs (id, name) VALUES (1, 'DrugA'), (2, 'DrugB'); CREATE TABLE sales (id INT, drug_id INT, year INT, revenue INT);"}
{"sql_prompt": "What is the average playtime for female players in RPG games?", "sql": "SELECT AVG(Playtime) as AvgPlaytime FROM PlayerActivity INNER JOIN PlayerInfo ON PlayerActivity.PlayerID = PlayerInfo.PlayerID WHERE Gender = 'Female' AND GameType = 'RPG';", "sql_context": "CREATE TABLE PlayerInfo (PlayerID INT, Gender VARCHAR(50), GameType VARCHAR(50)); INSERT INTO PlayerInfo (PlayerID, Gender, GameType) VALUES (1, 'Female', 'RPG'), (2, 'Male', 'FPS'), (3, 'Female', 'RPG'), (4, 'Non-binary', 'Simulation');   CREATE TABLE PlayerActivity (PlayerID INT, GameID INT, Playtime FLOAT); INSERT INTO PlayerActivity (PlayerID, GameID, Playtime) VALUES (1, 1, 50.5), (2, 2, 60.2), (3, 1, 75.1), (4, 3, 80.5);"}
{"sql_prompt": "What is the total landfill capacity in cubic meters for each region in Africa in 2021?", "sql": "SELECT region, SUM(capacity) FROM landfill_capacity WHERE year = 2021 GROUP BY region;", "sql_context": "CREATE TABLE landfill_capacity (region VARCHAR(50), year INT, capacity FLOAT); INSERT INTO landfill_capacity (region, year, capacity) VALUES ('Northern Africa', 2021, 1200000.0), ('Western Africa', 2021, 1500000.0), ('Eastern Africa', 2021, 2000000.0), ('Central Africa', 2021, 1800000.0), ('Southern Africa', 2021, 1300000.0);"}
{"sql_prompt": "What is the minimum cultural competency score of community health workers in each city in India?", "sql": "SELECT City, MIN(Score) as MinScore FROM CommunityHealthWorkers GROUP BY City;", "sql_context": "CREATE TABLE CommunityHealthWorkers (WorkerID INT, City VARCHAR(255), Score INT); INSERT INTO CommunityHealthWorkers (WorkerID, City, Score) VALUES (1, 'Mumbai', 80), (2, 'Delhi', 85), (3, 'Bangalore', 90), (4, 'Hyderabad', 70);"}
{"sql_prompt": "What are the top 3 countries with the highest energy efficiency ratings?", "sql": "SELECT country, rating FROM energy_efficiency ORDER BY rating DESC LIMIT 3;", "sql_context": "CREATE TABLE energy_efficiency (country VARCHAR(50), rating FLOAT); INSERT INTO energy_efficiency (country, rating) VALUES ('SE', 3.4), ('NO', 3.3), ('FI', 3.1);"}
{"sql_prompt": "What is the maximum budget for any rural infrastructure project in Colombia?", "sql": "SELECT MAX(budget) FROM rural_infrastructure WHERE location = 'Colombia';", "sql_context": "CREATE TABLE rural_infrastructure (id INT, name TEXT, location TEXT, budget FLOAT); INSERT INTO rural_infrastructure (id, name, location, budget) VALUES (1, 'Solar Power Plant', 'Colombia', 800000.00), (2, 'Irrigation System', 'Colombia', 500000.00), (3, 'Healthcare Center', 'Ecuador', 600000.00);"}
